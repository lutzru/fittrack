[{"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/index.tsx":"1","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/App.tsx":"2","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/AuthContext.tsx":"3","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/Login.tsx":"4","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/pages/NewLogEntryPage.tsx":"5","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/Decoder.tsx":"6","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/LogList.tsx":"7","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/Signup.tsx":"8","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/firebase.js":"9","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/reduxStuff.tsx":"10","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/NewLogEntry.tsx":"11","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/reduxStore.tsx":"12"},{"size":678,"mtime":1611300776318,"results":"13","hashOfConfig":"14"},{"size":2769,"mtime":1611300596738,"results":"15","hashOfConfig":"14"},{"size":1790,"mtime":1610613985238,"results":"16","hashOfConfig":"14"},{"size":1561,"mtime":1611300159826,"results":"17","hashOfConfig":"14"},{"size":1130,"mtime":1609161278605,"results":"18","hashOfConfig":"14"},{"size":936,"mtime":1609165679586,"results":"19","hashOfConfig":"14"},{"size":1125,"mtime":1609853298263,"results":"20","hashOfConfig":"14"},{"size":1736,"mtime":1610611335793,"results":"21","hashOfConfig":"14"},{"size":591,"mtime":1609854729799,"results":"22","hashOfConfig":"14"},{"size":1474,"mtime":1611301241168,"results":"23","hashOfConfig":"14"},{"size":1450,"mtime":1609853300254,"results":"24","hashOfConfig":"14"},{"size":501,"mtime":1611300873521,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"peg21i",{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/index.tsx",["58"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/App.tsx",["59","60","61","62","63"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/AuthContext.tsx",["64","65","66","67","68"],"import React, { Component } from \"react\";\nimport { useContext, useEffect, useState, createContext } from \"react\";\nimport { firebaseAuth } from \"./firebase\";\n\nlet signup = async (email: string, password: string) => {\n  console.log(\"Try Signup with: \" + email + \" \" + password);\n\n  try {\n    await firebaseAuth.createUserWithEmailAndPassword(email, password);\n    alert(\"Registrierung erfolgreich!\");\n  } catch (e) {\n    alert(\"Fehler11:\" + e);\n  }\n};\n\nlet login = async (email: string, password: string) => {\n  /* \n  //const dispatch = useDispatch<Dispatch<ActionTypes>>();\n\n  console.log(\"Try Login with: \" + email + \" \" + password);\n\n  try {\n    let res = await firebaseAuth.signInWithEmailAndPassword(email, password);\n    console.log(\"Erfolgreich!: \", res);\n    alert(\"Login erfolgreich!\");\n  } catch (e) {\n    alert(\"Fehler11:\" + e);\n  }\n\n  //console.log(\"Loginresult: \", res);\n\n  */\n};\n\nlet value = {\n  authenticated: true,\n  lang: \"en\",\n  theme: \"lutz-dunkel\",\n  signup: signup,\n  login: login,\n};\n\n//\n// React Context erzeugen\n//\n// - was sich wenig ändert, global erreichbar, nicht Statemanagement\n// - alternativ alles in Redux\n// - login, per dispatch an Redux\n// - im Reducer, Actionen auslösen (Serverlogik nicht in der GuiComponent)\n// - Reducer gut testbar\n// - Gui Component, keine Logik einfügen\n//\n// - Context eher für: Theme,Sprache\n//   (Dinge die nur einmal da sind, und wenig geändert werden.)\n//   Theme im Context, was ausgewählt, z.B. dark im State\n//\nconst AuthContext = React.createContext(value);\n\n//\n// Provider aus dem React context holen\n//\nconst AuthProvider = AuthContext.Provider;\n\n//\n// hier den Context per Hook erreichbar machen\n// kein Tag in index mit Provider.. nötig\n//\nexport default function useAuth() {\n  return useContext(AuthContext);\n}\n",["69","70"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/Login.tsx",["71","72","73","74","75","76","77"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/pages/NewLogEntryPage.tsx",["78","79"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"../components/Decoder\";\nimport NewLogEntry from \"../components/NewLogEntry\";\n\nexport interface NewLogEntryPageProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntryPage = (props: NewLogEntryPageProps): JSX.Element => {\n  return (\n    <Box padding={3}>\n      <Paper elevation={3}>\n        <Box padding={3}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={2}>\n            <Grid item>\n              <Typography variant=\"h4\">New Log Entry:</Typography>\n            </Grid>\n\n            <Grid item>\n              <NewLogEntry\n                logCode={props.logCode}\n                onLogCodeChange={props.onLogCodeChange}\n                onEnter={props.onEnter}\n                logItem={props.logItem}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default NewLogEntryPage;\n","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/Decoder.tsx",["80"],"export interface EntryType {\n  code: string;\n  unit: string;\n  desc: string;\n  count: number;\n  kcal: number;\n  totalKcal: number;\n}\n\nexport interface CodeEntryType {\n  code: string;\n  codedate: string;\n  codetime: string;\n}\n\nlet decodeLogCode = (logCode: string): EntryType => {\n  let res = \"\";\n\n  let entry = {\n    code: \"-\",\n    unit: \"-\",\n    desc: \"-\",\n    count: 0,\n    kcal: 0,\n    totalKcal: 0,\n  };\n\n  let parts = logCode.split(\" \");\n  console.log(parts);\n\n  if (parts.length === 2) {\n    if (parts[0] === \"ei\") {\n      let count = parseInt(parts[1]);\n      let unit = \"Stück\";\n      let entryText = \"Gekochtes Ei\";\n      let entryKcal = 100;\n      let totalEntryKcal = entryKcal * count;\n\n      entry = {\n        code: logCode,\n        unit: unit,\n        desc: entryText,\n        count: count,\n        kcal: entryKcal,\n        totalKcal: totalEntryKcal,\n      };\n    }\n  }\n\n  return entry;\n};\n\nexport default decodeLogCode;\n","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/LogList.tsx",["81","82","83","84","85","86"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { format } from \"date-fns\";\n\nimport * as React from \"react\";\nimport decodeLogCode, { EntryType, CodeEntryType } from \"./Decoder\";\n\nexport interface LogListProps {\n  logBook: CodeEntryType[];\n}\n\nconst LogList = (props: LogListProps): JSX.Element => {\n  let sumToday = 0;\n  const today = new Date();\n  const todayFormatted = format(today, \"dd.MM.yyyy\");\n\n  const listItems = props.logBook.map((entry: CodeEntryType) => {\n    let logItem: EntryType = decodeLogCode(entry.code);\n\n    if (todayFormatted == entry.codedate) {\n      sumToday = sumToday + logItem.totalKcal;\n    }\n\n    return (\n      <Grid item>\n        {entry.code} - {entry.codedate} - {entry.codetime} - {logItem.desc} -{\" \"}\n        {logItem.count} {logItem.unit} -{logItem.kcal} kcal -{\" \"}\n        {logItem.totalKcal} Σ kcal\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>Summe Heute: {sumToday}</Grid>\n      {listItems}\n    </Grid>\n  );\n};\n\nexport default LogList;\n","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/Signup.tsx",["87","88","89","90","91","92","93","94","95"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { format } from \"date-fns\";\nimport React, { useRef, useState } from \"react\";\nimport decodeLogCode, { EntryType, CodeEntryType } from \"./Decoder\";\n\nimport useAuth from \"../AuthContext\";\n\nexport interface SignupProps {}\n\nconst Signup = (props: SignupProps): JSX.Element => {\n  const { signup } = useAuth();\n\n  let [email, setEmail] = useState(\"\");\n  let [pw1, setPw1] = useState(\"\");\n  let [pw2, setPw2] = useState(\"\");\n\n  async function handleSubmit(e: any) {\n    e.preventDefault();\n\n    console.log(\"Signup go  -\" + email + \"-\" + pw1 + \"-\" + pw2 + \"-\");\n    if (pw1 === pw2) {\n      console.log(\"Signup call\");\n\n      signup(email, pw2);\n    }\n  }\n\n  return (\n    <div>\n      Signup: {email} - {pw1} - {pw2}\n      <br /> <br />\n      <TextField\n        id=\"username\"\n        label=\"Email\"\n        value={email}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setEmail(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <TextField\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={pw1}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setPw1(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <TextField\n        id=\"password\"\n        label=\"Password Confirmation\"\n        type=\"password\"\n        value={pw2}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setPw2(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        signup\n      </Button>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/firebase.js",[],["96","97"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/reduxStuff.tsx",["98","99","100","101","102","103"],"/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/components/NewLogEntry.tsx",["104","105","106"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"./Decoder\";\n\nexport interface LoginDialogProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntry = (props: LoginDialogProps): JSX.Element => {\n  const enterHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      //alert(e.key+' pressed')\n      props.onEnter();\n    }\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    props.onEnter();\n  };\n\n  const onLocalLogCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onLogCodeChange(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Logcode\"\n          value={props.logCode}\n          onChange={onLocalLogCodeChange}\n          onKeyPress={enterHandler}\n        />\n      </Grid>\n\n      <Grid item>\n        {props.logItem.desc} - {props.logItem.count} {props.logItem.unit} -{\" \"}\n        {props.logItem.kcal} kcal - {props.logItem.totalKcal} Σ kcal\n      </Grid>\n\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          log\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewLogEntry;\n","/Users/lutzruhmann/Documents/1-Code/React/fittrack/src/reduxStore.tsx",[],{"ruleId":"107","severity":1,"message":"108","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":27},{"ruleId":"107","severity":1,"message":"111","line":5,"column":15,"nodeType":"109","messageId":"110","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"112","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":19},{"ruleId":"107","severity":1,"message":"113","line":12,"column":10,"nodeType":"109","messageId":"110","endLine":12,"endColumn":22},{"ruleId":"107","severity":1,"message":"114","line":26,"column":10,"nodeType":"109","messageId":"110","endLine":26,"endColumn":21},{"ruleId":"107","severity":1,"message":"115","line":26,"column":23,"nodeType":"109","messageId":"110","endLine":26,"endColumn":37},{"ruleId":"107","severity":1,"message":"116","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"117","line":2,"column":22,"nodeType":"109","messageId":"110","endLine":2,"endColumn":31},{"ruleId":"107","severity":1,"message":"118","line":2,"column":33,"nodeType":"109","messageId":"110","endLine":2,"endColumn":41},{"ruleId":"107","severity":1,"message":"119","line":2,"column":43,"nodeType":"109","messageId":"110","endLine":2,"endColumn":56},{"ruleId":"107","severity":1,"message":"120","line":62,"column":7,"nodeType":"109","messageId":"110","endLine":62,"endColumn":19},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"107","severity":1,"message":"125","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":23},{"ruleId":"107","severity":1,"message":"126","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":13},{"ruleId":"107","severity":1,"message":"127","line":4,"column":15,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"128","line":4,"column":21,"nodeType":"109","messageId":"110","endLine":4,"endColumn":26},{"ruleId":"107","severity":1,"message":"129","line":4,"column":39,"nodeType":"109","messageId":"110","endLine":4,"endColumn":49},{"ruleId":"107","severity":1,"message":"130","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":16},{"ruleId":"107","severity":1,"message":"131","line":14,"column":11,"nodeType":"109","messageId":"110","endLine":14,"endColumn":16},{"ruleId":"107","severity":1,"message":"132","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":37},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"133","line":17,"column":7,"nodeType":"109","messageId":"110","endLine":17,"endColumn":10},{"ruleId":"107","severity":1,"message":"126","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"128","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"132","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":37},{"ruleId":"107","severity":1,"message":"129","line":1,"column":39,"nodeType":"109","messageId":"110","endLine":1,"endColumn":49},{"ruleId":"107","severity":1,"message":"111","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":21,"column":24,"nodeType":"136","messageId":"137","endLine":21,"endColumn":26},{"ruleId":"107","severity":1,"message":"126","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"127","line":1,"column":15,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"128","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"129","line":1,"column":39,"nodeType":"109","messageId":"110","endLine":1,"endColumn":49},{"ruleId":"107","severity":1,"message":"130","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":16},{"ruleId":"107","severity":1,"message":"125","line":4,"column":17,"nodeType":"109","messageId":"110","endLine":4,"endColumn":23},{"ruleId":"107","severity":1,"message":"138","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"139","line":5,"column":25,"nodeType":"109","messageId":"110","endLine":5,"endColumn":34},{"ruleId":"107","severity":1,"message":"140","line":5,"column":36,"nodeType":"109","messageId":"110","endLine":5,"endColumn":49},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"107","severity":1,"message":"113","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":22},{"ruleId":"107","severity":1,"message":"141","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"142","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":25},{"ruleId":"107","severity":1,"message":"143","line":3,"column":27,"nodeType":"109","messageId":"110","endLine":3,"endColumn":38},{"ruleId":"107","severity":1,"message":"144","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":26},{"ruleId":"107","severity":1,"message":"145","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":13},{"ruleId":"107","severity":1,"message":"126","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"128","line":1,"column":21,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"129","line":1,"column":39,"nodeType":"109","messageId":"110","endLine":1,"endColumn":49},"@typescript-eslint/no-unused-vars","'FirebaseAuthContext' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'NewLogEntry' is defined but never used.","'firebaseAuth' is defined but never used.","'currentItem' is assigned a value but never used.","'setCurrentItem' is assigned a value but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createContext' is defined but never used.","'AuthProvider' is assigned a value but never used.","no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'useRef' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'format' is defined but never used.","'login' is assigned a value but never used.","'TextField' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'decodeLogCode' is defined but never used.","'EntryType' is defined but never used.","'CodeEntryType' is defined but never used.","'applyMiddleware' is defined but never used.","'combineReducers' is defined but never used.","'createStore' is defined but never used.","'devToolsEnhancer' is defined but never used.","'thunk' is defined but never used.","no-global-assign","no-unsafe-negation"]