[{"/Users/lutzruhmann/Documents/Code/React/fittrack/src/index.tsx":"1","/Users/lutzruhmann/Documents/Code/React/fittrack/src/App.tsx":"2","/Users/lutzruhmann/Documents/Code/React/fittrack/src/store.tsx":"3","/Users/lutzruhmann/Documents/Code/React/fittrack/src/reducer.tsx":"4","/Users/lutzruhmann/Documents/Code/React/fittrack/src/pages/NewLogEntryPage.tsx":"5","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/NewLogEntry.tsx":"6","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Decoder.tsx":"7","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/LogList.tsx":"8"},{"size":620,"mtime":1608710928556,"results":"9","hashOfConfig":"10"},{"size":1963,"mtime":1609165767810,"results":"11","hashOfConfig":"10"},{"size":138,"mtime":1608708061810,"results":"12","hashOfConfig":"10"},{"size":1135,"mtime":1608712536650,"results":"13","hashOfConfig":"10"},{"size":1130,"mtime":1609161278605,"results":"14","hashOfConfig":"10"},{"size":1450,"mtime":1609161225365,"results":"15","hashOfConfig":"10"},{"size":936,"mtime":1609165679586,"results":"16","hashOfConfig":"10"},{"size":1125,"mtime":1609165706487,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8z7nxl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lutzruhmann/Documents/Code/React/fittrack/src/index.tsx",[],["38","39"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/App.tsx",["40","41","42","43"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/store.tsx",[],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/reducer.tsx",["44","45"],"const initialState = {\n  todos: [\n    { id: 0, text: \"Learn React\", completed: true },\n    { id: 1, text: \"Learn Redux\", completed: false, color: \"purple\" },\n    { id: 2, text: \"Build something fun!\", completed: false, color: \"blue\" },\n  ],\n  filters: {\n    status: \"All\",\n    colors: [],\n  },\n  message: \"Moin/Tach\",\n};\n\n/* Define Actions and its Payload */\n\nexport const addLogcode = \"add/logcode\";\ninterface addLogcode {\n  type: typeof addLogcode;\n  payload: string;\n}\n\nexport const changeMessage = \"change/message\";\ninterface changeMessage {\n  type: typeof changeMessage;\n  payload: string;\n}\n\nexport type ActionTypes = addLogcode | changeMessage;\n\n// Use the initialState as a default value\nexport default function appReducer(state = initialState, action: ActionTypes) {\n  // The reducer normally looks at the action type field to decide what happens\n  switch (action.type) {\n    // Do something here based on the different types of actions\n\n    default:\n      // If this reducer doesn't recognize the action type, or doesn't\n      // care about this specific action, return the existing state unchanged\n      return state;\n  }\n}\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/pages/NewLogEntryPage.tsx",["46","47"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"../components/Decoder\";\nimport NewLogEntry from \"../components/NewLogEntry\";\n\nexport interface NewLogEntryPageProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntryPage = (props: NewLogEntryPageProps): JSX.Element => {\n  return (\n    <Box padding={3}>\n      <Paper elevation={3}>\n        <Box padding={3}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={2}>\n            <Grid item>\n              <Typography variant=\"h4\">New Log Entry:</Typography>\n            </Grid>\n\n            <Grid item>\n              <NewLogEntry\n                logCode={props.logCode}\n                onLogCodeChange={props.onLogCodeChange}\n                onEnter={props.onEnter}\n                logItem={props.logItem}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default NewLogEntryPage;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/NewLogEntry.tsx",["48","49","50"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"./Decoder\";\n\nexport interface LoginDialogProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntry = (props: LoginDialogProps): JSX.Element => {\n  const enterHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      //alert(e.key+' pressed')\n      props.onEnter();\n    }\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    props.onEnter();\n  };\n\n  const onLocalLogCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onLogCodeChange(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Logcode\"\n          value={props.logCode}\n          onChange={onLocalLogCodeChange}\n          onKeyPress={enterHandler}\n        />\n      </Grid>\n\n      <Grid item>\n        {props.logItem.desc} - {props.logItem.count} {props.logItem.unit} -{\" \"}\n        {props.logItem.kcal} kcal - {props.logItem.totalKcal} Î£ kcal\n      </Grid>\n\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          log\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewLogEntry;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Decoder.tsx",["51"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/LogList.tsx",["52","53","54","55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":15,"nodeType":"64","messageId":"65","endLine":5,"endColumn":21},{"ruleId":"62","severity":1,"message":"66","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":19},{"ruleId":"62","severity":1,"message":"67","line":21,"column":10,"nodeType":"64","messageId":"65","endLine":21,"endColumn":21},{"ruleId":"62","severity":1,"message":"68","line":21,"column":23,"nodeType":"64","messageId":"65","endLine":21,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":17,"column":11,"nodeType":"64","messageId":"71","endLine":17,"endColumn":21},{"ruleId":"69","severity":1,"message":"72","line":23,"column":11,"nodeType":"64","messageId":"71","endLine":23,"endColumn":24},{"ruleId":"62","severity":1,"message":"73","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":37},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"74","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"75","line":1,"column":21,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"76","line":1,"column":39,"nodeType":"64","messageId":"65","endLine":1,"endColumn":49},{"ruleId":"62","severity":1,"message":"77","line":17,"column":7,"nodeType":"64","messageId":"65","endLine":17,"endColumn":10},{"ruleId":"62","severity":1,"message":"74","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":13},{"ruleId":"62","severity":1,"message":"75","line":1,"column":21,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"73","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":37},{"ruleId":"62","severity":1,"message":"76","line":1,"column":39,"nodeType":"64","messageId":"65","endLine":1,"endColumn":49},{"ruleId":"62","severity":1,"message":"63","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":21,"column":24,"nodeType":"80","messageId":"81","endLine":21,"endColumn":26},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NewLogEntry' is defined but never used.","'currentItem' is assigned a value but never used.","'setCurrentItem' is assigned a value but never used.","@typescript-eslint/no-redeclare","'addLogcode' is already defined.","redeclared","'changeMessage' is already defined.","'TextField' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]