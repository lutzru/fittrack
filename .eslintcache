[{"/Users/lutzruhmann/Documents/Code/React/fittrack/src/index.tsx":"1","/Users/lutzruhmann/Documents/Code/React/fittrack/src/App.tsx":"2","/Users/lutzruhmann/Documents/Code/React/fittrack/src/store.tsx":"3","/Users/lutzruhmann/Documents/Code/React/fittrack/src/reducer.tsx":"4","/Users/lutzruhmann/Documents/Code/React/fittrack/src/pages/NewLogEntryPage.tsx":"5","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/NewLogEntry.tsx":"6","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Decoder.tsx":"7","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/LogList.tsx":"8","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Signup.tsx":"9","/Users/lutzruhmann/Documents/Code/React/fittrack/src/firebase.js":"10","/Users/lutzruhmann/Documents/Code/React/fittrack/src/AuthContext.tsx":"11","/Users/lutzruhmann/Documents/Code/React/fittrack/src/contexts/ExampleBakAuthContext.js":"12","/Users/lutzruhmann/Documents/Code/React/fittrack/src/Login.tsx":"13"},{"size":669,"mtime":1609854101838,"results":"14","hashOfConfig":"15"},{"size":2514,"mtime":1609858003052,"results":"16","hashOfConfig":"15"},{"size":138,"mtime":1608708061810,"results":"17","hashOfConfig":"15"},{"size":1135,"mtime":1608712536650,"results":"18","hashOfConfig":"15"},{"size":1130,"mtime":1609161278605,"results":"19","hashOfConfig":"15"},{"size":1450,"mtime":1609853300254,"results":"20","hashOfConfig":"15"},{"size":936,"mtime":1609165679586,"results":"21","hashOfConfig":"15"},{"size":1125,"mtime":1609853298263,"results":"22","hashOfConfig":"15"},{"size":1861,"mtime":1609857725130,"results":"23","hashOfConfig":"15"},{"size":591,"mtime":1609854729799,"results":"24","hashOfConfig":"15"},{"size":2311,"mtime":1609860002624,"results":"25","hashOfConfig":"15"},{"size":857,"mtime":1609852662196,"results":"26","hashOfConfig":"15"},{"size":1466,"mtime":1609858927519,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"8z7nxl",{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"31"},"/Users/lutzruhmann/Documents/Code/React/fittrack/src/index.tsx",["65"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport FirebaseAuthContext from \"./AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["66","67"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/App.tsx",["68","69","70","71","72"],"import React, { useState } from \"react\";\n\nimport \"./App.css\";\n\nimport { Box, Button, Grid } from \"@material-ui/core\";\nimport NewLogEntry from \"./components/NewLogEntry\";\nimport NewLogEntryPage from \"./pages/NewLogEntryPage\";\nimport decodeLogCode, { EntryType, CodeEntryType } from \"./components/Decoder\";\nimport LogList from \"./components/LogList\";\nimport { format } from \"date-fns\";\nimport Signup from \"./components/Signup\";\nimport { firebaseAuth } from \"./firebase\";\nimport useAuth from \"./AuthContext\";\nimport Login from \"./Login\";\n\nfunction App(): JSX.Element {\n  //\n  // Hier wird der zentrale State gehalten\n  // und alles wird im zentralen State gehalten!\n  //\n  const [logCode, setLogCode] = useState(\"\");\n  const logBookInitial: CodeEntryType[] = [];\n  const [logBook, setLogBook] = useState(logBookInitial);\n  const [currentItem, setCurrentItem] = useState({});\n\n  let onEnter = () => {\n    //alert(\"Enter pressed code is: \" + logCode);\n\n    const today = new Date();\n    const formattedDate = format(today, \"dd.MM.yyyy\");\n    const formattedTime = format(today, \"HH:mm\");\n\n    let newCodeItem: CodeEntryType = {\n      code: logCode,\n      codedate: formattedDate,\n      codetime: formattedTime,\n    };\n\n    // Append to Array, with Wrapper Function\n    // https://medium.com/javascript-in-plain-english/how-to-add-to-an-array-in-react-state-3d08ddb2e1dc\n    setLogBook((logBook) => [newCodeItem, ...logBook]);\n  };\n\n  let logItem: EntryType = decodeLogCode(logCode);\n  if (logItem.desc !== \"-\") {\n    // setCurrentItem(logItem);\n  }\n\n  // Firebase Login https://www.youtube.com/watch?v=PKwu15ldZ7k\n  // UseContext: https://www.youtube.com/watch?v=5LrDIWkK_Bc\n\n  //\n  // so kann ich auf Werte aus dem Kontext zugreifen\n  //\n  let { theme } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <Box>\n        <Grid container className=\"Cont-Root\" spacing={5}>\n          <Grid item xs={12}>\n            <Signup /> Theme aus context: --{theme}--\n            <br />\n            <br />\n            <br />\n            <Login />\n          </Grid>\n\n          <Grid item xs={12}>\n            Fittraxx\n          </Grid>\n\n          <Grid item xs={12}>\n            <NewLogEntryPage\n              logCode={logCode}\n              onLogCodeChange={setLogCode}\n              onEnter={onEnter}\n              logItem={logItem}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <LogList logBook={logBook} />\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/store.tsx",[],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/reducer.tsx",["73","74"],"const initialState = {\n  todos: [\n    { id: 0, text: \"Learn React\", completed: true },\n    { id: 1, text: \"Learn Redux\", completed: false, color: \"purple\" },\n    { id: 2, text: \"Build something fun!\", completed: false, color: \"blue\" },\n  ],\n  filters: {\n    status: \"All\",\n    colors: [],\n  },\n  message: \"Moin/Tach\",\n};\n\n/* Define Actions and its Payload */\n\nexport const addLogcode = \"add/logcode\";\ninterface addLogcode {\n  type: typeof addLogcode;\n  payload: string;\n}\n\nexport const changeMessage = \"change/message\";\ninterface changeMessage {\n  type: typeof changeMessage;\n  payload: string;\n}\n\nexport type ActionTypes = addLogcode | changeMessage;\n\n// Use the initialState as a default value\nexport default function appReducer(state = initialState, action: ActionTypes) {\n  // The reducer normally looks at the action type field to decide what happens\n  switch (action.type) {\n    // Do something here based on the different types of actions\n\n    default:\n      // If this reducer doesn't recognize the action type, or doesn't\n      // care about this specific action, return the existing state unchanged\n      return state;\n  }\n}\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/pages/NewLogEntryPage.tsx",["75","76"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"../components/Decoder\";\nimport NewLogEntry from \"../components/NewLogEntry\";\n\nexport interface NewLogEntryPageProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntryPage = (props: NewLogEntryPageProps): JSX.Element => {\n  return (\n    <Box padding={3}>\n      <Paper elevation={3}>\n        <Box padding={3}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={2}>\n            <Grid item>\n              <Typography variant=\"h4\">New Log Entry:</Typography>\n            </Grid>\n\n            <Grid item>\n              <NewLogEntry\n                logCode={props.logCode}\n                onLogCodeChange={props.onLogCodeChange}\n                onEnter={props.onEnter}\n                logItem={props.logItem}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default NewLogEntryPage;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/NewLogEntry.tsx",["77","78","79"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport * as React from \"react\";\nimport { EntryType } from \"./Decoder\";\n\nexport interface LoginDialogProps {\n  logCode: string;\n  onEnter: () => void;\n  onLogCodeChange: (userName: string) => void;\n  logItem: EntryType;\n}\n\nconst NewLogEntry = (props: LoginDialogProps): JSX.Element => {\n  const enterHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      //alert(e.key+' pressed')\n      props.onEnter();\n    }\n  };\n\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    props.onEnter();\n  };\n\n  const onLocalLogCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onLogCodeChange(e.target.value);\n  };\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Logcode\"\n          value={props.logCode}\n          onChange={onLocalLogCodeChange}\n          onKeyPress={enterHandler}\n        />\n      </Grid>\n\n      <Grid item>\n        {props.logItem.desc} - {props.logItem.count} {props.logItem.unit} -{\" \"}\n        {props.logItem.kcal} kcal - {props.logItem.totalKcal} Σ kcal\n      </Grid>\n\n      <Grid item>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n          log\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default NewLogEntry;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Decoder.tsx",["80"],"export interface EntryType {\n  code: string;\n  unit: string;\n  desc: string;\n  count: number;\n  kcal: number;\n  totalKcal: number;\n}\n\nexport interface CodeEntryType {\n  code: string;\n  codedate: string;\n  codetime: string;\n}\n\nlet decodeLogCode = (logCode: string): EntryType => {\n  let res = \"\";\n\n  let entry = {\n    code: \"-\",\n    unit: \"-\",\n    desc: \"-\",\n    count: 0,\n    kcal: 0,\n    totalKcal: 0,\n  };\n\n  let parts = logCode.split(\" \");\n  console.log(parts);\n\n  if (parts.length === 2) {\n    if (parts[0] === \"ei\") {\n      let count = parseInt(parts[1]);\n      let unit = \"Stück\";\n      let entryText = \"Gekochtes Ei\";\n      let entryKcal = 100;\n      let totalEntryKcal = entryKcal * count;\n\n      entry = {\n        code: logCode,\n        unit: unit,\n        desc: entryText,\n        count: count,\n        kcal: entryKcal,\n        totalKcal: totalEntryKcal,\n      };\n    }\n  }\n\n  return entry;\n};\n\nexport default decodeLogCode;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/LogList.tsx",["81","82","83","84","85","86"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { format } from \"date-fns\";\n\nimport * as React from \"react\";\nimport decodeLogCode, { EntryType, CodeEntryType } from \"./Decoder\";\n\nexport interface LogListProps {\n  logBook: CodeEntryType[];\n}\n\nconst LogList = (props: LogListProps): JSX.Element => {\n  let sumToday = 0;\n  const today = new Date();\n  const todayFormatted = format(today, \"dd.MM.yyyy\");\n\n  const listItems = props.logBook.map((entry: CodeEntryType) => {\n    let logItem: EntryType = decodeLogCode(entry.code);\n\n    if (todayFormatted == entry.codedate) {\n      sumToday = sumToday + logItem.totalKcal;\n    }\n\n    return (\n      <Grid item>\n        {entry.code} - {entry.codedate} - {entry.codetime} - {logItem.desc} -{\" \"}\n        {logItem.count} {logItem.unit} -{logItem.kcal} kcal -{\" \"}\n        {logItem.totalKcal} Σ kcal\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item>Summe Heute: {sumToday}</Grid>\n      {listItems}\n    </Grid>\n  );\n};\n\nexport default LogList;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/components/Signup.tsx",["87","88","89","90","91","92","93","94","95"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { format } from \"date-fns\";\nimport React, { useRef, useState } from \"react\";\nimport decodeLogCode, { EntryType, CodeEntryType } from \"./Decoder\";\n\nimport useAuth from \"../AuthContext\";\n\nexport interface SignupProps {}\n\nconst Signup = (props: SignupProps): JSX.Element => {\n  const { signup } = useAuth();\n\n  let [email, setEmail] = useState(\"\");\n  let [pw1, setPw1] = useState(\"\");\n  let [pw2, setPw2] = useState(\"\");\n\n  async function handleSubmit(e: any) {\n    e.preventDefault();\n\n    console.log(\"Signup go  -\" + email + \"-\" + pw1 + \"-\" + pw2 + \"-\");\n    if (pw1 === pw2) {\n      console.log(\"Signup call\");\n\n      try {\n        await signup(email, pw2);\n        alert(\"Registrierung erfolgreich!\");\n      } catch (e) {\n        alert(\"Fehler11:\" + e);\n      }\n    }\n  }\n\n  return (\n    <div>\n      Signup: {email} - {pw1} - {pw2}\n      <br /> <br />\n      <TextField\n        id=\"username\"\n        label=\"Email\"\n        value={email}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setEmail(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <TextField\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={pw1}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setPw1(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <TextField\n        id=\"password\"\n        label=\"Password Confirmation\"\n        type=\"password\"\n        value={pw2}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setPw2(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        signup\n      </Button>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/lutzruhmann/Documents/Code/React/fittrack/src/firebase.js",[],["96","97"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/AuthContext.tsx",["98","99","100"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/contexts/ExampleBakAuthContext.js",["101"],"/Users/lutzruhmann/Documents/Code/React/fittrack/src/Login.tsx",["102","103","104","105","106","107"],"import { Box, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { format } from \"date-fns\";\nimport React, { useRef, useState } from \"react\";\n\nimport useAuth from \"./AuthContext\";\n\nexport interface LoginProps {}\n\nconst Login = (props: LoginProps): JSX.Element => {\n  const { login } = useAuth();\n\n  let [email, setEmail] = useState(\"\");\n  let [pw1, setPw1] = useState(\"\");\n\n  async function handleSubmit(e: any) {\n    e.preventDefault();\n\n    console.log(\"Signup go  -\" + email + \"-\" + pw1 + \"-\");\n\n    console.log(\"Signup call\");\n\n    try {\n      let r = await login(email, pw1);\n      console.log(\"Erfolgreich!: \", r);\n      alert(\"Login erfolgreich!\");\n    } catch (e) {\n      alert(\"Fehler11:\" + e);\n    }\n  }\n\n  return (\n    <div>\n      Login: {email} - {pw1}\n      <br /> <br />\n      <TextField\n        id=\"username\"\n        label=\"Email\"\n        value={email}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setEmail(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <TextField\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        value={pw1}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          setPw1(e.target.value);\n        }}\n      />\n      <br /> <br />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        login\n      </Button>\n    </div>\n  );\n};\n\nexport default Login;\n",{"ruleId":"108","severity":1,"message":"109","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":27},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":5,"column":15,"nodeType":"110","messageId":"111","endLine":5,"endColumn":21},{"ruleId":"108","severity":1,"message":"117","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":19},{"ruleId":"108","severity":1,"message":"118","line":12,"column":10,"nodeType":"110","messageId":"111","endLine":12,"endColumn":22},{"ruleId":"108","severity":1,"message":"119","line":24,"column":10,"nodeType":"110","messageId":"111","endLine":24,"endColumn":21},{"ruleId":"108","severity":1,"message":"120","line":24,"column":23,"nodeType":"110","messageId":"111","endLine":24,"endColumn":37},{"ruleId":"121","severity":1,"message":"122","line":17,"column":11,"nodeType":"110","messageId":"123","endLine":17,"endColumn":21},{"ruleId":"121","severity":1,"message":"124","line":23,"column":11,"nodeType":"110","messageId":"123","endLine":23,"endColumn":24},{"ruleId":"108","severity":1,"message":"125","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":37},{"ruleId":"108","severity":1,"message":"116","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"126","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"127","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"128","line":1,"column":39,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"129","line":17,"column":7,"nodeType":"110","messageId":"111","endLine":17,"endColumn":10},{"ruleId":"108","severity":1,"message":"126","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"127","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"125","line":1,"column":28,"nodeType":"110","messageId":"111","endLine":1,"endColumn":37},{"ruleId":"108","severity":1,"message":"128","line":1,"column":39,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"116","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":21,"column":24,"nodeType":"132","messageId":"133","endLine":21,"endColumn":26},{"ruleId":"108","severity":1,"message":"126","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"134","line":1,"column":15,"nodeType":"110","messageId":"111","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"127","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"128","line":1,"column":39,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"135","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"136","line":4,"column":17,"nodeType":"110","messageId":"111","endLine":4,"endColumn":23},{"ruleId":"108","severity":1,"message":"137","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":21},{"ruleId":"108","severity":1,"message":"138","line":5,"column":25,"nodeType":"110","messageId":"111","endLine":5,"endColumn":34},{"ruleId":"108","severity":1,"message":"139","line":5,"column":36,"nodeType":"110","messageId":"111","endLine":5,"endColumn":49},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"140","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":31},{"ruleId":"108","severity":1,"message":"141","line":2,"column":33,"nodeType":"110","messageId":"111","endLine":2,"endColumn":41},{"ruleId":"108","severity":1,"message":"142","line":2,"column":43,"nodeType":"110","messageId":"111","endLine":2,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":38,"column":11,"nodeType":"110","messageId":"111","endLine":38,"endColumn":16},{"ruleId":"108","severity":1,"message":"126","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"134","line":1,"column":15,"nodeType":"110","messageId":"111","endLine":1,"endColumn":19},{"ruleId":"108","severity":1,"message":"127","line":1,"column":21,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"128","line":1,"column":39,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"135","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"136","line":4,"column":17,"nodeType":"110","messageId":"111","endLine":4,"endColumn":23},"@typescript-eslint/no-unused-vars","'FirebaseAuthContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'Button' is defined but never used.","'NewLogEntry' is defined but never used.","'firebaseAuth' is defined but never used.","'currentItem' is assigned a value but never used.","'setCurrentItem' is assigned a value but never used.","@typescript-eslint/no-redeclare","'addLogcode' is already defined.","redeclared","'changeMessage' is already defined.","'TextField' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Grid' is defined but never used.","'format' is defined but never used.","'useRef' is defined but never used.","'decodeLogCode' is defined but never used.","'EntryType' is defined but never used.","'CodeEntryType' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'createContext' is defined but never used.","no-unused-vars","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]